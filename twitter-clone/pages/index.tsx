import Head from "next/head";
import Image from "next/image";
import { useEffect } from "react";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Client, Databases, Account } from "appwrite";

const inter = Inter({ subsets: ["latin"] });

export default function Home({ tweets }) {
  console.log(tweets);

  // run once when component mount
  useEffect(() => {
    const client = new Client();

    const account = new Account(client);
  }, []);

  // function async create user signup for Appwrite
  const createUser = async () => {
    const client = new Client();

    const account = new Account(client);

    client
      .setEndpoint(process.env.NEXT_PUBLIC_ENDPOINT)
      .setProject(process.env.NEXT_PUBLIC_PROJECT);

    const response = account.create("axell", "axell@gmail.com", "adam1234");

    response.then(
      function (response) {
        console.log(response); // succes
      },
      function (error) {
        console.log(error); // failure
      }
    );
  };

  // function async create user login for Appwrite
  const userLogin = async () => {
    const client = new Client();

    const account = new Account(client);

    client
      .setEndpoint(process.env.NEXT_PUBLIC_ENDPOINT)
      .setProject(process.env.NEXT_PUBLIC_PROJECT);

    const response = account.createEmailSession("axell@gmail.com", "adam1234");

    response.then(
      function (response) {
        console.log(response); // succes
      },
      function (error) {
        console.log(error); // failure
      }
    );
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div style={{ padding: 30 }}>
          <button onClick={createUser}>Create User</button>
          <button onClick={userLogin}>Create User via Email</button>
        </div>
      </main>
    </>
  );
}

export async function getServerSideProps(context) {
  const client = new Client();

  client
    .setEndpoint(process.env.NEXT_PUBLIC_ENDPOINT)
    .setProject(process.env.NEXT_PUBLIC_PROJECT);

  const databases = new Databases(client);

  const tweets = await databases.listDocuments(
    process.env.NEXT_PUBLIC_DATABASE,
    process.env.NEXT_PUBLIC_TWEETS_COLLECTION
  );

  return {
    props: { tweets },
  };
}
